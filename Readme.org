* Introduction
  + Note: On 2022-04-08 Nexo fixed their export to give correct values for exchange transactions
  + Updated 2022-04-08T17:23:24-07:00
  + Usage page for nexo-koinly-csv at https://github.com/troywill/nexo-koinly-csv/blob/main/USAGE.org
  + This is a utility written in Perl to fix and reformat a Nexo transaction CSV export to a CSV file readable by Koinly.
  + Ideally the need for this program will be very short lived!
  + This program was written by following the excellent Koinly documentation at
  https://help.koinly.io/en/articles/3662999-how-to-create-a-custom-csv-file-with-your-data
  You can see a Koinly template at https://docs.google.com/spreadsheets/d/1dESkilY70aLlo18P3wqXR_PX1svNyAbkYiAk2tBPJng/edit#gid=0

* The nexo-koinly-csv Perl program
  #+begin_src perl :tangle nexo-koinly-csv :shebang #!/usr/bin/env perl
    # version 0.13
    # updated 2022-04-08T17:23:24-07:00
    # works with Nexo CSV exports after 2022-04-07
    use v5.30.0;

    my $nexo_csv_file = $ARGV[0] or die "Please supply Nexo CSV file";
    open( my $fh_csv, '<', $nexo_csv_file ) or die "$!: Can't find $nexo_csv_file";
    open( my $fh_warnings, '>', 'WARN.TXT' ) or warn "$!: Unable to open WARN.TXT file";
    open( my $fh_skips, '>', 'SKIP.TXT' ) or warn "$!: Unable to open SKIP.TXT file";

    my $header_line = <$fh_csv>; # Throw away the Nexo column header line

    # say "$date_time_with_tz,$output_amount,$output_currency,$input_amount,$input_currency,$label,$description,$TxHash"; # <= These columns recognized by Koinly
    # my $new_header_line = "Date,Sent Amount,Sent Currency,Received Amount,Received Currency,Label,TxHash,Description,NexoID,Type"; # BEFORE 2022-04-05T21:36:22-07:00
    my $new_header_line = "Date,NexoID,Type,Sent Amount,Sent Currency,Received Amount,Received Currency,Label,Description,TxHash"; # AFTER 2022-04-05T21:36:22-07:00

    say $new_header_line;

    while(my $row = <$fh_csv>) {
	chomp($row);

	my ($description, $tx_hash);

	my $label;

	my ($nexo_transaction_id,$type,$input_currency,$input_amount,$output_currency,$output_amount,$usd_equivalent,$details,$outstanding_loan,$nexo_date_time) = split /,/, $row;

	# next if $details =~/^rejected/;
	if ( $details =~/^\"rejected/ ) {
	    say "REJECTED";
	    exit;
	}	

	if ( $type eq 'LockingTermDeposit') { say $fh_skips $row; next }
	if ( $type eq 'UnlockingTermDeposit' )  { say $fh_skips $row; next }
	if ( $type eq 'TransferIn' )  { say $fh_skips $row; next }
	if ( $type eq 'TransferOut' )  { say $fh_skips $row; next }

	#  Skip over the 4 loan related transaction
	if ( $type eq 'WithdrawalCredit' ) { say $fh_skips $row; next }; # You get a loan 
	if ( $type eq 'Liquidation' )      { say $fh_skips $row; next }  # Loan has ended
	if ( $type eq 'Repayment' ) {        
	    if ( $type eq 'Deposit' && $details =~ /Credit Granting Top Up/ ) {
		say $fh_skips $row; # You Repaid the loan
		next
	    }
	}

	# Map Nexo names to Koinly names
	my $sent_amount       = $output_amount;
	my $sent_currency     = $output_currency;
	my $received_amount   = $input_amount;
	my $received_currency = $input_currency;

	my ($description,$tx_hash) = get_description($type, $details, $nexo_transaction_id);
	my $date_time_with_tz = date_with_timezone($nexo_date_time);

	if (($type eq 'Deposit') or	($type eq 'Exchange Cashback')) {
	    ($sent_amount, $sent_currency)  = ('', '');
	} elsif ($type eq 'Withdrawal') {
	    ($received_currency, $received_amount) = ('', '');
	} elsif (($type eq 'Interest') or ($type eq 'FixedTermInterest')) {
	    $label = 'Loan Interest';
	    ($sent_amount, $sent_currency)  = ('', '');
	} elsif ($type eq 'TransferIn') {
	    # ($output_currency, $output_amount)  = ('', '');
	} elsif ($type eq 'TransferOut') {
	    # ($input_currency, $input_amount)  = ('', '');
	} elsif ( $type eq 'Exchange' ) {
	    ($sent_amount,$sent_currency,$received_amount,$received_currency) = (abs($input_amount),$input_currency,$output_amount,$output_currency);
	    # say STDERR "ic: $input_currency, ia: $input_amount, oc: $output_currency, oa: $output_amount";
	    # say STDERR "sa: $sent_amount, sc: $sent_currency, ra: $received_amount, rc: $received_currency";
	} elsif ( $type eq 'ExchangeToWithdraw' ) {
	    ($sent_amount,$sent_currency,$received_amount,$received_currency) = exchange_to_withdraw_transaction ($input_currency,$input_amount,$output_currency,$output_amount);
	} elsif ( $type eq 'WithdrawExchanged' ) {
	    ($sent_amount,$sent_currency,$received_amount,$received_currency) = withdraw_exchanged ($input_currency,$input_amount,$output_currency,$output_amount);
	} elsif ( $type eq 'DepositToExchange' ) {
	    ($sent_amount,$sent_currency,$received_amount,$received_currency) = deposit_to_exchange_transaction ($input_currency,$input_amount,$output_currency,$output_amount);
	} elsif ( $type eq 'ExchangeDepositedOn') {
	    ($sent_amount,$sent_currency,$received_amount,$received_currency) = exchange_deposited_on_transaction ($input_currency,$input_amount,$output_currency,$output_amount);
	} else {
	    say $fh_warnings "$nexo_transaction_id: unknown type $type";
	}

	say "$date_time_with_tz,$nexo_transaction_id,$type,$sent_amount,$sent_currency,$received_amount,$received_currency,$label,$description,$tx_hash"; # AFTER 2022-04-05T21:36:22-07:00

    }

    # Change crypto to fiat for withdrawal from your Nexo account, e.g. GBPX -> GBP
    sub exchange_to_withdraw_transaction {
	# Transaction,  Type,              IC  ,IA,            OC, IO,  USD Equivalent,Details,Outstanding Loan,Date / Time
	# NXTUFwNJD4czO,ExchangeToWithdraw,GBPX,-3395.00000000,GBP,3395,$4695.285,approved / GBPX to GBP,$0.00,2021-04-04 15:26:39
	my ($input_currency,$input_amount,$output_currency,$output_amount) = @_;
	my ($sent_amount,$sent_currency,$received_amount,$received_currency);
	$sent_amount = abs($input_amount);
	$sent_currency = $input_currency;
	$received_amount = $output_amount;
	$received_currency = $output_currency;
	return ($sent_amount,$sent_currency,$received_amount,$received_currency);
    }

    # Withdrawal from your Nexo account to bank
    sub withdraw_exchanged {
	# | Date                      | IA   | IC  | OA       | OC   |
	# | 2021-04-04 15:26:39+01:00 | 3395 | GBP | -3395.00 | GBP  |

	my ($input_currency,$input_amount,$output_currency,$output_amount) = @_;
	my $sent_amount = $input_amount;
	my $sent_currency = $input_currency;
	my $received_amount = '';
	my $received_currency = '';
	return ($sent_amount,$sent_currency,$received_amount,$received_currency);
    }

    # Deposit fiat into your Nexo account
    sub deposit_to_exchange_transaction {
	my ($input_currency,$input_amount,$output_currency,$output_amount) = @_;

	my $sent_amount = '';
	my $sent_currency = '';
	my $received_amount = $input_amount;
	my $received_currency = $input_currency;
	return ($sent_amount,$sent_currency,$received_amount,$received_currency);
    }

    # Fiat to crypto, e.g. exchange 12.00 GBP to 12.00 GBPX
    sub exchange_deposited_on_transaction {
	my ($input_currency,$input_amount,$output_currency,$output_amount) = @_;

      #                                   ic  ia          oc   oa
      # NXTp7eAtAvp9Q,ExchangeDepositedOn,GBP,12.00000000,GBPX,12,$16.487928,approved / GBP to GBPX,$0.00,2021-04-12 18:01:34

	my $sent_amount = $input_amount;
	my $sent_currency = $input_currency;
	my $received_amount = $output_amount;
	my $received_currency = $output_currency;
	return ($sent_amount,$sent_currency,$received_amount,$received_currency);
    }

    sub date_with_timezone {
	my $nexo_date = shift;
	return $nexo_date . '+01:00'
    }

    sub get_description {
	my ($type, $details, $nexo_transaction_id) = @_;
	my $tx_hash = '';
	my $die_message = "Quiting program because Details field not in expected format with leading and trailing quotation marks";

	unless ( $details =~ s/^(\")// ) { # Remove the leading quotation mark
	    die $die_message;
	}

	unless ($details =~ s/(\")$//) { # Remove the trailing quotation mark
	    die $die_message;
	}

	# approved
	my $description = $details;
	$description =~ s/(^approved \/ )//;
	if ($1 ne 'approved / ') {
	    warn "warning: not approved";
	    say $fh_warnings "$nexo_transaction_id not approved";
	}
	if ($type eq 'Deposit') {
	    unless ($description =~ /(\s)/) {
		if (length($description) > 16) {
		    $tx_hash = $description;
		    $description = '';
		}
	    }
	}
	return ($description,$tx_hash);
    }
  #+end_src

* Nexo Transactions
  | Top Up Crypto       |
  | Withdrawal Crypto   |
  | Repayment           |
  | Interest            |
  | Sell Order          |
  | Additional Interest |
  | Loan Withdrawal     |
  | Accounting          |
  | Interest Discount   |
  | Dividend            |
  | Top Up Fiat         |
  | Exchange Withdrawal |
  | Withdrawal Fiat     |
  | ICO Deposit         |
  | Cashback            |
  | Exchange            |
  | Internal Transfer   |
  | Internal Transfer   |
* Nexo Transactions sorted
  | Accounting          |
  | Additional Interest |
  | Cashback            |
  | Dividend            |
  | Exchange            |
  | Exchange Withdrawal |
  | ICO Deposit         |
  | Interest            |
  | Interest Discount   |
  | Internal Transfer   |
  | Internal Transfer   |
  | Loan Withdrawal     |
  | Repayment           |
  | Sell Order          |
  | Top Up Crypto       |
  | Top Up Fiat         |
  | Withdrawal Crypto   |
  | Withdrawal Fiat     |

